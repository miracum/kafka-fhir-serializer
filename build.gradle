// groovylint-disable NestedBlockDepth

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'com.diffplug.spotless' version '7.0.3'
    id 'jacoco'
    id 'io.gitee.pkmer.sonatype-central-publisher' version '1.1.0'

}

group = 'org.miracum'
version = '2.0.3' // x-release-please-version

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'ca.uhn.hapi.fhir:hapi-fhir-base:8.0.0'
    implementation 'org.apache.kafka:kafka-clients:4.0.0'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.4'
    testImplementation 'ca.uhn.hapi.fhir:hapi-fhir-structures-r4:8.0.0'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.4'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}

jacoco {
    toolVersion = '0.8.13'
}

jacocoTestReport {
    reports {
        csv.required = true
        html.required = true
        xml.required = true
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'kafka-fhir-serializer'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Kafka FHIR® Serializer'
                description = 'Support for serializing and deserializing FHIR® resources in Apache Kafka.'
                url = 'https://github.com/miracum/kafka-fhir-serializer'
                licenses {
                    license {
                        name = 'Apache 2.0'
                        url = 'https://opensource.org/licenses/Apache-2.0'
                    }
                }
                developers {
                    developer {
                        id = 'MIRACUM'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/miracum/kafka-fhir-serializer.git'
                    developerConnection = 'scm:git:ssh://github.com:miracum/kafka-fhir-serializer.git'
                    url = 'https://github.com/miracum/kafka-fhir-serializer'
                }
            }
        }
    }
    repositories {
        maven {
            name = "Local"
            url = layout.buildDirectory.dir('repos/bundles')
        }
    }
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

signing {
    def signingKey = System.getenv('MIRACUM_SIGNING_KEY')
    def signingPassword = System.getenv('MIRACUM_SIGNING_KEY_PASSPHRASE')
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

pkmerBoot {
    sonatypeMavenCentral{
        // the same with publishing.repositories.maven.url in the configuration.
        stagingRepository = layout.buildDirectory.dir("repos/bundles")
        /**
         * get username and password from
         * <a href="https://central.sonatype.com/account"> central sonatype account</a>
         */
        username = System.getenv('OSSRH_USERNAME')
        password = System.getenv('OSSRH_PASSWORD')
    }
}

spotless {
    java {
        importOrder()
        removeUnusedImports()
        googleJavaFormat()
    }
}
